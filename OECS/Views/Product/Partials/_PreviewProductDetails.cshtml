@model OECS.Models.ProductModels.ProductDetailModels.ViewProductDetailModel
@using OECS.Repository.ProductRepository.ProductDetailRepository;
@using OECS.Models;
@using (Ajax.BeginForm("AddItem", "Cart", new AjaxOptions { HttpMethod = "POST", OnSuccess = "ViewItemAdded", OnComplete = "", OnFailure = "" }))
{
    @Html.AntiForgeryToken()
    
    IProductDetailRepository _productDetailRepository = new ProductDetailRepository(new oecsEntities());
    var icon = _productDetailRepository.ViewProductIcon(Model.ProductID);

    string toggleLoginModal = (!Request.IsAuthenticated && Session["Modules"] == null && (Session["ShopNow"] == null || (bool)Session["ShopNow"] == false)) ? "#modalLoginOrRegister" : "#modalCart";

    <div class="container product-gallery-details">
        <div class="card">
            <div class="card-body">
                <h5>@Model.ProductName</h5>
                <h6>@String.Format("{0:C}", (decimal)Model.Price)</h6>
                <hr />
                <p>
                    <strong>Brand:</strong>
                    @Model.BrandName
                </p>
            </div>
        </div>
        <hr />
        <strong>Size:</strong>
        <div class="card">
            @Html.DropDownListFor(i => Model.SizeID, ViewBag.SizeList as IEnumerable<SelectListItem>, new { @class = "browser-default mdb-select form-control" })
        </div>
        <hr />
        <strong>Color:</strong><br />
        @Html.HiddenFor(i => Model.ProductID)
        @Html.HiddenFor(i => Model.ColorID)
        @foreach (var i in icon)
        {
            <a onclick="PreviewImages(parseInt(@i.ProductID), parseInt(@i.ColorID), parseInt(@i.IconID), $(this))">
                <img src="..\..\@i.IconPath" class="img-fluid z-depth-1 rounded-circle img-thumbnail icon" id="icon-@i.IconID">
            </a>
        }
        <hr />
        <strong>Quantity:</strong><br />
        <div class="def-number-input number-input safari_only">
            <button onclick="this.parentNode.querySelector('input[type=number]').stepDown()" type="button" class="minus"></button>
            @Html.TextBoxFor(i => Model.Quantity, new { @class = "quantity", @min = "1", @type = "number"})
            <button onclick="this.parentNode.querySelector('input[type=number]').stepUp()" type="button" class="plus"></button>
        </div>
        <hr />
        <div class="form-inline">
            <div class="col">
                <a class="btn btn-primary btn-block" href="@(toggleLoginModal != "#modalLoginOrRegister" ? Url.Action("Index", "CheckOut") : "")" id="BtnBuyNow" data-toggle="@(toggleLoginModal == "#modalLoginOrRegister" ? "modal" : "")" data-target="@(toggleLoginModal == "#modalLoginOrRegister" ? toggleLoginModal : "")">
                    BUY NOW
                </a>
            </div>
            <div class="col">
                <button class="d-none" type="submit" id="BtnConfirmAddToCart"></button>
                <button class="btn btn-info btn-block @(toggleLoginModal != "#modalCart" ? "btn-shop" : "")" type="button" id="BtnAddToCart" modal="@toggleLoginModal">
                    ADD TO CART
                </button>
            </div>
        </div>
    </div>
}