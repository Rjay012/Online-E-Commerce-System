@model IEnumerable<OECS.Models.ProductModels.ViewProductModel>
@using OECS.Models;
@*@model PagedList.IPagedList<OECS.Models.Product>
    @using PagedList.Mvc;*@
<div class="row wow fadeIn">
    @{
        oecsEntities dbContext = new oecsEntities();
        var product = Model.GroupBy(c => new { c.ProductColor, c.Product });

        foreach (var p in product)
        {
            var icon = dbContext.ProductColor
                                .Where(i => i.ProductID == p.Key.Product.ProductID && i.isDisplay == true)
                                .Select(i => new {
                                    i.path,
                                    i.Icon.icon1
                                }).ToList();
            <div class="col-lg-3 col-md-6 mb-4">
                <div class="card">
                    <div class="view overlay">
                        <img src="@p.Key.ProductColor.path" class="card-img-top" id="card-img-@p.Key.Product.ProductID" alt="">
                        <a>
                            <div class="mask rgba-white-slight"></div>
                        </a>
                    </div>
                    <div class="col-sm-6">
                        <a class="badge badge-light float-left myPopover" item="@p.Key.Product.ProductID" data-toggle="popover" data-template="<div class='popover'><div class='arrow'></div><h3 class='popover-header'></h3><div class='popover-body'></div><div class='popover-footer'></div></div>">
                            @p.Key.Product.ProductColor.Where(pc => pc.isDisplay == true).Count() colour(s)
                        </a>
                        <div class="d-none" id="popover-@p.Key.Product.ProductID" role="tooltip">
                            <div class="col-sm-12">
                                @foreach (var i in icon)
                                {
                                    <a class="product-icon" id="@i.path-@p.Key.Product.ProductID">
                                        <img src="@i.icon1" class="img-fluid z-depth-1 rounded-circle img-thumbnail" alt="">
                                    </a>
                                }
                            </div>
                        </div>
                    </div>
                    <hr />
                    <div class="card-body text-center">
                        <a href="" class="grey-text">
                            <h5>@p.Key.Product.Category.category1</h5>
                        </a>
                        <h5>
                            <strong>
                                <a href="" class="dark-grey-text">
                                    @p.Key.Product.productName
                                </a>
                            </strong>
                        </h5>

                        <h4 class="font-weight-bold blue-text">
                            <strong>@p.Key.Product.price</strong>
                        </h4>

                        <div class="container-fluid">
                            <div class="col-xs-6">
                                <button class="btn btn-primary btn-sm" type="button">Buy Now</button>
                            </div>
                            <div class="col-xs-6">
                                <button class="btn btn-warning btn-sm" type="button">Add to Cart</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
</div>
@*@Html.PagedListPager(Model, page => Url.Action("Show", new { page, pageSize = Model.PageSize }))
    Showing @Model.FirstItemOnPage to @Model.LastItemOnPage of @Model.TotalItemCount Products*@
